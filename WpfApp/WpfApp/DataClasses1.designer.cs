#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TransportDB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAngajat(Angajat instance);
    partial void UpdateAngajat(Angajat instance);
    partial void DeleteAngajat(Angajat instance);
    partial void InsertBilet(Bilet instance);
    partial void UpdateBilet(Bilet instance);
    partial void DeleteBilet(Bilet instance);
    partial void InsertComplaint(Complaint instance);
    partial void UpdateComplaint(Complaint instance);
    partial void DeleteComplaint(Complaint instance);
    partial void InsertCoordonate_Statie(Coordonate_Statie instance);
    partial void UpdateCoordonate_Statie(Coordonate_Statie instance);
    partial void DeleteCoordonate_Statie(Coordonate_Statie instance);
    partial void InsertMT(MT instance);
    partial void UpdateMT(MT instance);
    partial void DeleteMT(MT instance);
    partial void InsertPersoana(Persoana instance);
    partial void UpdatePersoana(Persoana instance);
    partial void DeletePersoana(Persoana instance);
    partial void InsertStatie(Statie instance);
    partial void UpdateStatie(Statie instance);
    partial void DeleteStatie(Statie instance);
    partial void InsertTip_Angajat(Tip_Angajat instance);
    partial void UpdateTip_Angajat(Tip_Angajat instance);
    partial void DeleteTip_Angajat(Tip_Angajat instance);
    partial void InsertTip_Bilet(Tip_Bilet instance);
    partial void UpdateTip_Bilet(Tip_Bilet instance);
    partial void DeleteTip_Bilet(Tip_Bilet instance);
    partial void InsertTip_Statie(Tip_Statie instance);
    partial void UpdateTip_Statie(Tip_Statie instance);
    partial void DeleteTip_Statie(Tip_Statie instance);
    partial void InsertTip_User(Tip_User instance);
    partial void UpdateTip_User(Tip_User instance);
    partial void DeleteTip_User(Tip_User instance);
    partial void InsertTipMT(TipMT instance);
    partial void UpdateTipMT(TipMT instance);
    partial void DeleteTipMT(TipMT instance);
    partial void InsertTraseu(Traseu instance);
    partial void UpdateTraseu(Traseu instance);
    partial void DeleteTraseu(Traseu instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::WpfApp.Properties.Settings.Default.TransportDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Angajat> Angajats
		{
			get
			{
				return this.GetTable<Angajat>();
			}
		}
		
		public System.Data.Linq.Table<Bilet> Bilets
		{
			get
			{
				return this.GetTable<Bilet>();
			}
		}
		
		public System.Data.Linq.Table<Complaint> Complaints
		{
			get
			{
				return this.GetTable<Complaint>();
			}
		}
		
		public System.Data.Linq.Table<Coordonate_Statie> Coordonate_Staties
		{
			get
			{
				return this.GetTable<Coordonate_Statie>();
			}
		}
		
		public System.Data.Linq.Table<MT> MTs
		{
			get
			{
				return this.GetTable<MT>();
			}
		}
		
		public System.Data.Linq.Table<Persoana> Persoanas
		{
			get
			{
				return this.GetTable<Persoana>();
			}
		}
		
		public System.Data.Linq.Table<Statie> Staties
		{
			get
			{
				return this.GetTable<Statie>();
			}
		}
		
		public System.Data.Linq.Table<Tip_Angajat> Tip_Angajats
		{
			get
			{
				return this.GetTable<Tip_Angajat>();
			}
		}
		
		public System.Data.Linq.Table<Tip_Bilet> Tip_Bilets
		{
			get
			{
				return this.GetTable<Tip_Bilet>();
			}
		}
		
		public System.Data.Linq.Table<Tip_Statie> Tip_Staties
		{
			get
			{
				return this.GetTable<Tip_Statie>();
			}
		}
		
		public System.Data.Linq.Table<Tip_User> Tip_Users
		{
			get
			{
				return this.GetTable<Tip_User>();
			}
		}
		
		public System.Data.Linq.Table<TipMT> TipMTs
		{
			get
			{
				return this.GetTable<TipMT>();
			}
		}
		
		public System.Data.Linq.Table<Traseu> Traseus
		{
			get
			{
				return this.GetTable<Traseu>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Angajat")]
	public partial class Angajat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_unic;
		
		private decimal _salariu;
		
		private int _id_persoana;
		
		private int _tip_angajat;
		
		private System.DateTime _data_angajarii;
		
		private EntitySet<MT> _MTs;
		
		private EntityRef<Persoana> _Persoana;
		
		private EntityRef<Tip_Angajat> _Tip_Angajat1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_unicChanging(int value);
    partial void Onid_unicChanged();
    partial void OnsalariuChanging(decimal value);
    partial void OnsalariuChanged();
    partial void Onid_persoanaChanging(int value);
    partial void Onid_persoanaChanged();
    partial void Ontip_angajatChanging(int value);
    partial void Ontip_angajatChanged();
    partial void Ondata_angajariiChanging(System.DateTime value);
    partial void Ondata_angajariiChanged();
    #endregion
		
		public Angajat()
		{
			this._MTs = new EntitySet<MT>(new Action<MT>(this.attach_MTs), new Action<MT>(this.detach_MTs));
			this._Persoana = default(EntityRef<Persoana>);
			this._Tip_Angajat1 = default(EntityRef<Tip_Angajat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_unic", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_unic
		{
			get
			{
				return this._id_unic;
			}
			set
			{
				if ((this._id_unic != value))
				{
					this.Onid_unicChanging(value);
					this.SendPropertyChanging();
					this._id_unic = value;
					this.SendPropertyChanged("id_unic");
					this.Onid_unicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salariu", DbType="Decimal(10,2) NOT NULL")]
		public decimal salariu
		{
			get
			{
				return this._salariu;
			}
			set
			{
				if ((this._salariu != value))
				{
					this.OnsalariuChanging(value);
					this.SendPropertyChanging();
					this._salariu = value;
					this.SendPropertyChanged("salariu");
					this.OnsalariuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_persoana", DbType="Int NOT NULL")]
		public int id_persoana
		{
			get
			{
				return this._id_persoana;
			}
			set
			{
				if ((this._id_persoana != value))
				{
					if (this._Persoana.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_persoanaChanging(value);
					this.SendPropertyChanging();
					this._id_persoana = value;
					this.SendPropertyChanged("id_persoana");
					this.Onid_persoanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tip_angajat", DbType="Int NOT NULL")]
		public int tip_angajat
		{
			get
			{
				return this._tip_angajat;
			}
			set
			{
				if ((this._tip_angajat != value))
				{
					if (this._Tip_Angajat1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontip_angajatChanging(value);
					this.SendPropertyChanging();
					this._tip_angajat = value;
					this.SendPropertyChanged("tip_angajat");
					this.Ontip_angajatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_angajarii", DbType="Date NOT NULL")]
		public System.DateTime data_angajarii
		{
			get
			{
				return this._data_angajarii;
			}
			set
			{
				if ((this._data_angajarii != value))
				{
					this.Ondata_angajariiChanging(value);
					this.SendPropertyChanging();
					this._data_angajarii = value;
					this.SendPropertyChanged("data_angajarii");
					this.Ondata_angajariiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Angajat_MT", Storage="_MTs", ThisKey="id_unic", OtherKey="id_sofer")]
		public EntitySet<MT> MTs
		{
			get
			{
				return this._MTs;
			}
			set
			{
				this._MTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persoana_Angajat", Storage="_Persoana", ThisKey="id_persoana", OtherKey="id_unic", IsForeignKey=true)]
		public Persoana Persoana
		{
			get
			{
				return this._Persoana.Entity;
			}
			set
			{
				Persoana previousValue = this._Persoana.Entity;
				if (((previousValue != value) 
							|| (this._Persoana.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persoana.Entity = null;
						previousValue.Angajats.Remove(this);
					}
					this._Persoana.Entity = value;
					if ((value != null))
					{
						value.Angajats.Add(this);
						this._id_persoana = value.id_unic;
					}
					else
					{
						this._id_persoana = default(int);
					}
					this.SendPropertyChanged("Persoana");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tip_Angajat_Angajat", Storage="_Tip_Angajat1", ThisKey="tip_angajat", OtherKey="id_unic", IsForeignKey=true)]
		public Tip_Angajat Tip_Angajat1
		{
			get
			{
				return this._Tip_Angajat1.Entity;
			}
			set
			{
				Tip_Angajat previousValue = this._Tip_Angajat1.Entity;
				if (((previousValue != value) 
							|| (this._Tip_Angajat1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tip_Angajat1.Entity = null;
						previousValue.Angajats.Remove(this);
					}
					this._Tip_Angajat1.Entity = value;
					if ((value != null))
					{
						value.Angajats.Add(this);
						this._tip_angajat = value.id_unic;
					}
					else
					{
						this._tip_angajat = default(int);
					}
					this.SendPropertyChanged("Tip_Angajat1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MTs(MT entity)
		{
			this.SendPropertyChanging();
			entity.Angajat = this;
		}
		
		private void detach_MTs(MT entity)
		{
			this.SendPropertyChanging();
			entity.Angajat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bilet")]
	public partial class Bilet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_unic;
		
		private int _tip_bilet;
		
		private System.DateTime _valabilitate;
		
		private int _id_calator;
		
		private int _nr_bilete;
		
		private EntityRef<Tip_Bilet> _Tip_Bilet1;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_unicChanging(int value);
    partial void Onid_unicChanged();
    partial void Ontip_biletChanging(int value);
    partial void Ontip_biletChanged();
    partial void OnvalabilitateChanging(System.DateTime value);
    partial void OnvalabilitateChanged();
    partial void Onid_calatorChanging(int value);
    partial void Onid_calatorChanged();
    partial void Onnr_bileteChanging(int value);
    partial void Onnr_bileteChanged();
    #endregion
		
		public Bilet()
		{
			this._Tip_Bilet1 = default(EntityRef<Tip_Bilet>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_unic", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_unic
		{
			get
			{
				return this._id_unic;
			}
			set
			{
				if ((this._id_unic != value))
				{
					this.Onid_unicChanging(value);
					this.SendPropertyChanging();
					this._id_unic = value;
					this.SendPropertyChanged("id_unic");
					this.Onid_unicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tip_bilet", DbType="Int NOT NULL")]
		public int tip_bilet
		{
			get
			{
				return this._tip_bilet;
			}
			set
			{
				if ((this._tip_bilet != value))
				{
					if (this._Tip_Bilet1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontip_biletChanging(value);
					this.SendPropertyChanging();
					this._tip_bilet = value;
					this.SendPropertyChanged("tip_bilet");
					this.Ontip_biletChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valabilitate", DbType="Date NOT NULL")]
		public System.DateTime valabilitate
		{
			get
			{
				return this._valabilitate;
			}
			set
			{
				if ((this._valabilitate != value))
				{
					this.OnvalabilitateChanging(value);
					this.SendPropertyChanging();
					this._valabilitate = value;
					this.SendPropertyChanged("valabilitate");
					this.OnvalabilitateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_calator", DbType="Int NOT NULL")]
		public int id_calator
		{
			get
			{
				return this._id_calator;
			}
			set
			{
				if ((this._id_calator != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_calatorChanging(value);
					this.SendPropertyChanging();
					this._id_calator = value;
					this.SendPropertyChanged("id_calator");
					this.Onid_calatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nr_bilete", DbType="Int NOT NULL")]
		public int nr_bilete
		{
			get
			{
				return this._nr_bilete;
			}
			set
			{
				if ((this._nr_bilete != value))
				{
					this.Onnr_bileteChanging(value);
					this.SendPropertyChanging();
					this._nr_bilete = value;
					this.SendPropertyChanged("nr_bilete");
					this.Onnr_bileteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tip_Bilet_Bilet", Storage="_Tip_Bilet1", ThisKey="tip_bilet", OtherKey="id_unic", IsForeignKey=true)]
		public Tip_Bilet Tip_Bilet1
		{
			get
			{
				return this._Tip_Bilet1.Entity;
			}
			set
			{
				Tip_Bilet previousValue = this._Tip_Bilet1.Entity;
				if (((previousValue != value) 
							|| (this._Tip_Bilet1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tip_Bilet1.Entity = null;
						previousValue.Bilets.Remove(this);
					}
					this._Tip_Bilet1.Entity = value;
					if ((value != null))
					{
						value.Bilets.Add(this);
						this._tip_bilet = value.id_unic;
					}
					else
					{
						this._tip_bilet = default(int);
					}
					this.SendPropertyChanged("Tip_Bilet1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Bilet", Storage="_User", ThisKey="id_calator", OtherKey="id_unic", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Bilets.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Bilets.Add(this);
						this._id_calator = value.id_unic;
					}
					else
					{
						this._id_calator = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Complaint")]
	public partial class Complaint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_unic;
		
		private int _id_user;
		
		private string _text_plangere;
		
		private int _id_tip_MTC;
		
		private EntityRef<TipMT> _TipMT;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_unicChanging(int value);
    partial void Onid_unicChanged();
    partial void Onid_userChanging(int value);
    partial void Onid_userChanged();
    partial void Ontext_plangereChanging(string value);
    partial void Ontext_plangereChanged();
    partial void Onid_tip_MTCChanging(int value);
    partial void Onid_tip_MTCChanged();
    #endregion
		
		public Complaint()
		{
			this._TipMT = default(EntityRef<TipMT>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_unic", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_unic
		{
			get
			{
				return this._id_unic;
			}
			set
			{
				if ((this._id_unic != value))
				{
					this.Onid_unicChanging(value);
					this.SendPropertyChanging();
					this._id_unic = value;
					this.SendPropertyChanged("id_unic");
					this.Onid_unicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_user", DbType="Int NOT NULL")]
		public int id_user
		{
			get
			{
				return this._id_user;
			}
			set
			{
				if ((this._id_user != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_userChanging(value);
					this.SendPropertyChanging();
					this._id_user = value;
					this.SendPropertyChanged("id_user");
					this.Onid_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text_plangere", DbType="VarChar(1200)")]
		public string text_plangere
		{
			get
			{
				return this._text_plangere;
			}
			set
			{
				if ((this._text_plangere != value))
				{
					this.Ontext_plangereChanging(value);
					this.SendPropertyChanging();
					this._text_plangere = value;
					this.SendPropertyChanged("text_plangere");
					this.Ontext_plangereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tip_MTC", DbType="Int NOT NULL")]
		public int id_tip_MTC
		{
			get
			{
				return this._id_tip_MTC;
			}
			set
			{
				if ((this._id_tip_MTC != value))
				{
					if (this._TipMT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_tip_MTCChanging(value);
					this.SendPropertyChanging();
					this._id_tip_MTC = value;
					this.SendPropertyChanged("id_tip_MTC");
					this.Onid_tip_MTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipMT_Complaint", Storage="_TipMT", ThisKey="id_tip_MTC", OtherKey="id_unic", IsForeignKey=true)]
		public TipMT TipMT
		{
			get
			{
				return this._TipMT.Entity;
			}
			set
			{
				TipMT previousValue = this._TipMT.Entity;
				if (((previousValue != value) 
							|| (this._TipMT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipMT.Entity = null;
						previousValue.Complaints.Remove(this);
					}
					this._TipMT.Entity = value;
					if ((value != null))
					{
						value.Complaints.Add(this);
						this._id_tip_MTC = value.id_unic;
					}
					else
					{
						this._id_tip_MTC = default(int);
					}
					this.SendPropertyChanged("TipMT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Complaint", Storage="_User", ThisKey="id_user", OtherKey="id_unic", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Complaints.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Complaints.Add(this);
						this._id_user = value.id_unic;
					}
					else
					{
						this._id_user = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Coordonate_Statie")]
	public partial class Coordonate_Statie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_unic;
		
		private System.Nullable<int> _id_statie;
		
		private int _coord_X;
		
		private int _coord_Y;
		
		private EntityRef<Tip_Statie> _Tip_Statie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_unicChanging(int value);
    partial void Onid_unicChanged();
    partial void Onid_statieChanging(System.Nullable<int> value);
    partial void Onid_statieChanged();
    partial void Oncoord_XChanging(int value);
    partial void Oncoord_XChanged();
    partial void Oncoord_YChanging(int value);
    partial void Oncoord_YChanged();
    #endregion
		
		public Coordonate_Statie()
		{
			this._Tip_Statie = default(EntityRef<Tip_Statie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_unic", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_unic
		{
			get
			{
				return this._id_unic;
			}
			set
			{
				if ((this._id_unic != value))
				{
					this.Onid_unicChanging(value);
					this.SendPropertyChanging();
					this._id_unic = value;
					this.SendPropertyChanged("id_unic");
					this.Onid_unicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_statie", DbType="Int")]
		public System.Nullable<int> id_statie
		{
			get
			{
				return this._id_statie;
			}
			set
			{
				if ((this._id_statie != value))
				{
					if (this._Tip_Statie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_statieChanging(value);
					this.SendPropertyChanging();
					this._id_statie = value;
					this.SendPropertyChanged("id_statie");
					this.Onid_statieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coord_X", DbType="Int NOT NULL")]
		public int coord_X
		{
			get
			{
				return this._coord_X;
			}
			set
			{
				if ((this._coord_X != value))
				{
					this.Oncoord_XChanging(value);
					this.SendPropertyChanging();
					this._coord_X = value;
					this.SendPropertyChanged("coord_X");
					this.Oncoord_XChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coord_Y", DbType="Int NOT NULL")]
		public int coord_Y
		{
			get
			{
				return this._coord_Y;
			}
			set
			{
				if ((this._coord_Y != value))
				{
					this.Oncoord_YChanging(value);
					this.SendPropertyChanging();
					this._coord_Y = value;
					this.SendPropertyChanged("coord_Y");
					this.Oncoord_YChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tip_Statie_Coordonate_Statie", Storage="_Tip_Statie", ThisKey="id_statie", OtherKey="id_unic", IsForeignKey=true)]
		public Tip_Statie Tip_Statie
		{
			get
			{
				return this._Tip_Statie.Entity;
			}
			set
			{
				Tip_Statie previousValue = this._Tip_Statie.Entity;
				if (((previousValue != value) 
							|| (this._Tip_Statie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tip_Statie.Entity = null;
						previousValue.Coordonate_Staties.Remove(this);
					}
					this._Tip_Statie.Entity = value;
					if ((value != null))
					{
						value.Coordonate_Staties.Add(this);
						this._id_statie = value.id_unic;
					}
					else
					{
						this._id_statie = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tip_Statie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MT")]
	public partial class MT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_unic;
		
		private int _id_tip;
		
		private int _nr_traseu;
		
		private string _nr_inmatriculare;
		
		private int _id_sofer;
		
		private int _numar_mt;
		
		private EntityRef<Angajat> _Angajat;
		
		private EntityRef<TipMT> _TipMT;
		
		private EntityRef<Traseu> _Traseu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_unicChanging(int value);
    partial void Onid_unicChanged();
    partial void Onid_tipChanging(int value);
    partial void Onid_tipChanged();
    partial void Onnr_traseuChanging(int value);
    partial void Onnr_traseuChanged();
    partial void Onnr_inmatriculareChanging(string value);
    partial void Onnr_inmatriculareChanged();
    partial void Onid_soferChanging(int value);
    partial void Onid_soferChanged();
    partial void Onnumar_mtChanging(int value);
    partial void Onnumar_mtChanged();
    #endregion
		
		public MT()
		{
			this._Angajat = default(EntityRef<Angajat>);
			this._TipMT = default(EntityRef<TipMT>);
			this._Traseu = default(EntityRef<Traseu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_unic", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_unic
		{
			get
			{
				return this._id_unic;
			}
			set
			{
				if ((this._id_unic != value))
				{
					this.Onid_unicChanging(value);
					this.SendPropertyChanging();
					this._id_unic = value;
					this.SendPropertyChanged("id_unic");
					this.Onid_unicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tip", DbType="Int NOT NULL")]
		public int id_tip
		{
			get
			{
				return this._id_tip;
			}
			set
			{
				if ((this._id_tip != value))
				{
					if (this._TipMT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_tipChanging(value);
					this.SendPropertyChanging();
					this._id_tip = value;
					this.SendPropertyChanged("id_tip");
					this.Onid_tipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nr_traseu", DbType="Int NOT NULL")]
		public int nr_traseu
		{
			get
			{
				return this._nr_traseu;
			}
			set
			{
				if ((this._nr_traseu != value))
				{
					if (this._Traseu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnr_traseuChanging(value);
					this.SendPropertyChanging();
					this._nr_traseu = value;
					this.SendPropertyChanged("nr_traseu");
					this.Onnr_traseuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nr_inmatriculare", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string nr_inmatriculare
		{
			get
			{
				return this._nr_inmatriculare;
			}
			set
			{
				if ((this._nr_inmatriculare != value))
				{
					this.Onnr_inmatriculareChanging(value);
					this.SendPropertyChanging();
					this._nr_inmatriculare = value;
					this.SendPropertyChanged("nr_inmatriculare");
					this.Onnr_inmatriculareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sofer", DbType="Int NOT NULL")]
		public int id_sofer
		{
			get
			{
				return this._id_sofer;
			}
			set
			{
				if ((this._id_sofer != value))
				{
					if (this._Angajat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_soferChanging(value);
					this.SendPropertyChanging();
					this._id_sofer = value;
					this.SendPropertyChanged("id_sofer");
					this.Onid_soferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numar_mt", DbType="Int NOT NULL")]
		public int numar_mt
		{
			get
			{
				return this._numar_mt;
			}
			set
			{
				if ((this._numar_mt != value))
				{
					this.Onnumar_mtChanging(value);
					this.SendPropertyChanging();
					this._numar_mt = value;
					this.SendPropertyChanged("numar_mt");
					this.Onnumar_mtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Angajat_MT", Storage="_Angajat", ThisKey="id_sofer", OtherKey="id_unic", IsForeignKey=true)]
		public Angajat Angajat
		{
			get
			{
				return this._Angajat.Entity;
			}
			set
			{
				Angajat previousValue = this._Angajat.Entity;
				if (((previousValue != value) 
							|| (this._Angajat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Angajat.Entity = null;
						previousValue.MTs.Remove(this);
					}
					this._Angajat.Entity = value;
					if ((value != null))
					{
						value.MTs.Add(this);
						this._id_sofer = value.id_unic;
					}
					else
					{
						this._id_sofer = default(int);
					}
					this.SendPropertyChanged("Angajat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipMT_MT", Storage="_TipMT", ThisKey="id_tip", OtherKey="id_unic", IsForeignKey=true)]
		public TipMT TipMT
		{
			get
			{
				return this._TipMT.Entity;
			}
			set
			{
				TipMT previousValue = this._TipMT.Entity;
				if (((previousValue != value) 
							|| (this._TipMT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipMT.Entity = null;
						previousValue.MTs.Remove(this);
					}
					this._TipMT.Entity = value;
					if ((value != null))
					{
						value.MTs.Add(this);
						this._id_tip = value.id_unic;
					}
					else
					{
						this._id_tip = default(int);
					}
					this.SendPropertyChanged("TipMT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Traseu_MT", Storage="_Traseu", ThisKey="nr_traseu", OtherKey="id_unic", IsForeignKey=true)]
		public Traseu Traseu
		{
			get
			{
				return this._Traseu.Entity;
			}
			set
			{
				Traseu previousValue = this._Traseu.Entity;
				if (((previousValue != value) 
							|| (this._Traseu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Traseu.Entity = null;
						previousValue.MTs.Remove(this);
					}
					this._Traseu.Entity = value;
					if ((value != null))
					{
						value.MTs.Add(this);
						this._nr_traseu = value.id_unic;
					}
					else
					{
						this._nr_traseu = default(int);
					}
					this.SendPropertyChanged("Traseu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Persoana")]
	public partial class Persoana : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_unic;
		
		private int _tip_persoana;
		
		private string _nume;
		
		private string _prenume;
		
		private string _CNP;
		
		private string _adresa;
		
		private string _email;
		
		private EntitySet<Angajat> _Angajats;
		
		private EntitySet<User> _Users;
		
		private EntityRef<Tip_User> _Tip_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_unicChanging(int value);
    partial void Onid_unicChanged();
    partial void Ontip_persoanaChanging(int value);
    partial void Ontip_persoanaChanged();
    partial void OnnumeChanging(string value);
    partial void OnnumeChanged();
    partial void OnprenumeChanging(string value);
    partial void OnprenumeChanged();
    partial void OnCNPChanging(string value);
    partial void OnCNPChanged();
    partial void OnadresaChanging(string value);
    partial void OnadresaChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public Persoana()
		{
			this._Angajats = new EntitySet<Angajat>(new Action<Angajat>(this.attach_Angajats), new Action<Angajat>(this.detach_Angajats));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._Tip_User = default(EntityRef<Tip_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_unic", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_unic
		{
			get
			{
				return this._id_unic;
			}
			set
			{
				if ((this._id_unic != value))
				{
					this.Onid_unicChanging(value);
					this.SendPropertyChanging();
					this._id_unic = value;
					this.SendPropertyChanged("id_unic");
					this.Onid_unicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tip_persoana", DbType="Int NOT NULL")]
		public int tip_persoana
		{
			get
			{
				return this._tip_persoana;
			}
			set
			{
				if ((this._tip_persoana != value))
				{
					if (this._Tip_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontip_persoanaChanging(value);
					this.SendPropertyChanging();
					this._tip_persoana = value;
					this.SendPropertyChanged("tip_persoana");
					this.Ontip_persoanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nume", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string nume
		{
			get
			{
				return this._nume;
			}
			set
			{
				if ((this._nume != value))
				{
					this.OnnumeChanging(value);
					this.SendPropertyChanging();
					this._nume = value;
					this.SendPropertyChanged("nume");
					this.OnnumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenume", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string prenume
		{
			get
			{
				return this._prenume;
			}
			set
			{
				if ((this._prenume != value))
				{
					this.OnprenumeChanging(value);
					this.SendPropertyChanging();
					this._prenume = value;
					this.SendPropertyChanged("prenume");
					this.OnprenumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNP", DbType="Char(13)")]
		public string CNP
		{
			get
			{
				return this._CNP;
			}
			set
			{
				if ((this._CNP != value))
				{
					this.OnCNPChanging(value);
					this.SendPropertyChanging();
					this._CNP = value;
					this.SendPropertyChanged("CNP");
					this.OnCNPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adresa", DbType="NVarChar(200)")]
		public string adresa
		{
			get
			{
				return this._adresa;
			}
			set
			{
				if ((this._adresa != value))
				{
					this.OnadresaChanging(value);
					this.SendPropertyChanging();
					this._adresa = value;
					this.SendPropertyChanged("adresa");
					this.OnadresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(255)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persoana_Angajat", Storage="_Angajats", ThisKey="id_unic", OtherKey="id_persoana")]
		public EntitySet<Angajat> Angajats
		{
			get
			{
				return this._Angajats;
			}
			set
			{
				this._Angajats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persoana_User", Storage="_Users", ThisKey="id_unic", OtherKey="id_persoana")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tip_User_Persoana", Storage="_Tip_User", ThisKey="tip_persoana", OtherKey="id_unic", IsForeignKey=true)]
		public Tip_User Tip_User
		{
			get
			{
				return this._Tip_User.Entity;
			}
			set
			{
				Tip_User previousValue = this._Tip_User.Entity;
				if (((previousValue != value) 
							|| (this._Tip_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tip_User.Entity = null;
						previousValue.Persoanas.Remove(this);
					}
					this._Tip_User.Entity = value;
					if ((value != null))
					{
						value.Persoanas.Add(this);
						this._tip_persoana = value.id_unic;
					}
					else
					{
						this._tip_persoana = default(int);
					}
					this.SendPropertyChanged("Tip_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Angajats(Angajat entity)
		{
			this.SendPropertyChanging();
			entity.Persoana = this;
		}
		
		private void detach_Angajats(Angajat entity)
		{
			this.SendPropertyChanging();
			entity.Persoana = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Persoana = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Persoana = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Statie")]
	public partial class Statie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_unic;
		
		private int _id_traseu;
		
		private int _id_tip_statie;
		
		private string _ore;
		
		private EntityRef<Tip_Statie> _Tip_Statie;
		
		private EntityRef<Traseu> _Traseu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_unicChanging(int value);
    partial void Onid_unicChanged();
    partial void Onid_traseuChanging(int value);
    partial void Onid_traseuChanged();
    partial void Onid_tip_statieChanging(int value);
    partial void Onid_tip_statieChanged();
    partial void OnoreChanging(string value);
    partial void OnoreChanged();
    #endregion
		
		public Statie()
		{
			this._Tip_Statie = default(EntityRef<Tip_Statie>);
			this._Traseu = default(EntityRef<Traseu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_unic", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_unic
		{
			get
			{
				return this._id_unic;
			}
			set
			{
				if ((this._id_unic != value))
				{
					this.Onid_unicChanging(value);
					this.SendPropertyChanging();
					this._id_unic = value;
					this.SendPropertyChanged("id_unic");
					this.Onid_unicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_traseu", DbType="Int NOT NULL")]
		public int id_traseu
		{
			get
			{
				return this._id_traseu;
			}
			set
			{
				if ((this._id_traseu != value))
				{
					if (this._Traseu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_traseuChanging(value);
					this.SendPropertyChanging();
					this._id_traseu = value;
					this.SendPropertyChanged("id_traseu");
					this.Onid_traseuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tip_statie", DbType="Int NOT NULL")]
		public int id_tip_statie
		{
			get
			{
				return this._id_tip_statie;
			}
			set
			{
				if ((this._id_tip_statie != value))
				{
					if (this._Tip_Statie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_tip_statieChanging(value);
					this.SendPropertyChanging();
					this._id_tip_statie = value;
					this.SendPropertyChanged("id_tip_statie");
					this.Onid_tip_statieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ore", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string ore
		{
			get
			{
				return this._ore;
			}
			set
			{
				if ((this._ore != value))
				{
					this.OnoreChanging(value);
					this.SendPropertyChanging();
					this._ore = value;
					this.SendPropertyChanged("ore");
					this.OnoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tip_Statie_Statie", Storage="_Tip_Statie", ThisKey="id_tip_statie", OtherKey="id_unic", IsForeignKey=true)]
		public Tip_Statie Tip_Statie
		{
			get
			{
				return this._Tip_Statie.Entity;
			}
			set
			{
				Tip_Statie previousValue = this._Tip_Statie.Entity;
				if (((previousValue != value) 
							|| (this._Tip_Statie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tip_Statie.Entity = null;
						previousValue.Staties.Remove(this);
					}
					this._Tip_Statie.Entity = value;
					if ((value != null))
					{
						value.Staties.Add(this);
						this._id_tip_statie = value.id_unic;
					}
					else
					{
						this._id_tip_statie = default(int);
					}
					this.SendPropertyChanged("Tip_Statie");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Traseu_Statie", Storage="_Traseu", ThisKey="id_traseu", OtherKey="id_unic", IsForeignKey=true)]
		public Traseu Traseu
		{
			get
			{
				return this._Traseu.Entity;
			}
			set
			{
				Traseu previousValue = this._Traseu.Entity;
				if (((previousValue != value) 
							|| (this._Traseu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Traseu.Entity = null;
						previousValue.Staties.Remove(this);
					}
					this._Traseu.Entity = value;
					if ((value != null))
					{
						value.Staties.Add(this);
						this._id_traseu = value.id_unic;
					}
					else
					{
						this._id_traseu = default(int);
					}
					this.SendPropertyChanged("Traseu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tip_Angajat")]
	public partial class Tip_Angajat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_unic;
		
		private string _nume;
		
		private EntitySet<Angajat> _Angajats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_unicChanging(int value);
    partial void Onid_unicChanged();
    partial void OnnumeChanging(string value);
    partial void OnnumeChanged();
    #endregion
		
		public Tip_Angajat()
		{
			this._Angajats = new EntitySet<Angajat>(new Action<Angajat>(this.attach_Angajats), new Action<Angajat>(this.detach_Angajats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_unic", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_unic
		{
			get
			{
				return this._id_unic;
			}
			set
			{
				if ((this._id_unic != value))
				{
					this.Onid_unicChanging(value);
					this.SendPropertyChanging();
					this._id_unic = value;
					this.SendPropertyChanged("id_unic");
					this.Onid_unicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nume", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string nume
		{
			get
			{
				return this._nume;
			}
			set
			{
				if ((this._nume != value))
				{
					this.OnnumeChanging(value);
					this.SendPropertyChanging();
					this._nume = value;
					this.SendPropertyChanged("nume");
					this.OnnumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tip_Angajat_Angajat", Storage="_Angajats", ThisKey="id_unic", OtherKey="tip_angajat")]
		public EntitySet<Angajat> Angajats
		{
			get
			{
				return this._Angajats;
			}
			set
			{
				this._Angajats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Angajats(Angajat entity)
		{
			this.SendPropertyChanging();
			entity.Tip_Angajat1 = this;
		}
		
		private void detach_Angajats(Angajat entity)
		{
			this.SendPropertyChanging();
			entity.Tip_Angajat1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tip_Bilet")]
	public partial class Tip_Bilet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_unic;
		
		private string _nume;
		
		private EntitySet<Bilet> _Bilets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_unicChanging(int value);
    partial void Onid_unicChanged();
    partial void OnnumeChanging(string value);
    partial void OnnumeChanged();
    #endregion
		
		public Tip_Bilet()
		{
			this._Bilets = new EntitySet<Bilet>(new Action<Bilet>(this.attach_Bilets), new Action<Bilet>(this.detach_Bilets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_unic", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_unic
		{
			get
			{
				return this._id_unic;
			}
			set
			{
				if ((this._id_unic != value))
				{
					this.Onid_unicChanging(value);
					this.SendPropertyChanging();
					this._id_unic = value;
					this.SendPropertyChanged("id_unic");
					this.Onid_unicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nume", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string nume
		{
			get
			{
				return this._nume;
			}
			set
			{
				if ((this._nume != value))
				{
					this.OnnumeChanging(value);
					this.SendPropertyChanging();
					this._nume = value;
					this.SendPropertyChanged("nume");
					this.OnnumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tip_Bilet_Bilet", Storage="_Bilets", ThisKey="id_unic", OtherKey="tip_bilet")]
		public EntitySet<Bilet> Bilets
		{
			get
			{
				return this._Bilets;
			}
			set
			{
				this._Bilets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bilets(Bilet entity)
		{
			this.SendPropertyChanging();
			entity.Tip_Bilet1 = this;
		}
		
		private void detach_Bilets(Bilet entity)
		{
			this.SendPropertyChanging();
			entity.Tip_Bilet1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tip_Statie")]
	public partial class Tip_Statie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_unic;
		
		private string _nume;
		
		private EntitySet<Coordonate_Statie> _Coordonate_Staties;
		
		private EntitySet<Statie> _Staties;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_unicChanging(int value);
    partial void Onid_unicChanged();
    partial void OnnumeChanging(string value);
    partial void OnnumeChanged();
    #endregion
		
		public Tip_Statie()
		{
			this._Coordonate_Staties = new EntitySet<Coordonate_Statie>(new Action<Coordonate_Statie>(this.attach_Coordonate_Staties), new Action<Coordonate_Statie>(this.detach_Coordonate_Staties));
			this._Staties = new EntitySet<Statie>(new Action<Statie>(this.attach_Staties), new Action<Statie>(this.detach_Staties));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_unic", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_unic
		{
			get
			{
				return this._id_unic;
			}
			set
			{
				if ((this._id_unic != value))
				{
					this.Onid_unicChanging(value);
					this.SendPropertyChanging();
					this._id_unic = value;
					this.SendPropertyChanged("id_unic");
					this.Onid_unicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nume", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nume
		{
			get
			{
				return this._nume;
			}
			set
			{
				if ((this._nume != value))
				{
					this.OnnumeChanging(value);
					this.SendPropertyChanging();
					this._nume = value;
					this.SendPropertyChanged("nume");
					this.OnnumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tip_Statie_Coordonate_Statie", Storage="_Coordonate_Staties", ThisKey="id_unic", OtherKey="id_statie")]
		public EntitySet<Coordonate_Statie> Coordonate_Staties
		{
			get
			{
				return this._Coordonate_Staties;
			}
			set
			{
				this._Coordonate_Staties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tip_Statie_Statie", Storage="_Staties", ThisKey="id_unic", OtherKey="id_tip_statie")]
		public EntitySet<Statie> Staties
		{
			get
			{
				return this._Staties;
			}
			set
			{
				this._Staties.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Coordonate_Staties(Coordonate_Statie entity)
		{
			this.SendPropertyChanging();
			entity.Tip_Statie = this;
		}
		
		private void detach_Coordonate_Staties(Coordonate_Statie entity)
		{
			this.SendPropertyChanging();
			entity.Tip_Statie = null;
		}
		
		private void attach_Staties(Statie entity)
		{
			this.SendPropertyChanging();
			entity.Tip_Statie = this;
		}
		
		private void detach_Staties(Statie entity)
		{
			this.SendPropertyChanging();
			entity.Tip_Statie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tip_User")]
	public partial class Tip_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_unic;
		
		private string _nume;
		
		private EntitySet<Persoana> _Persoanas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_unicChanging(int value);
    partial void Onid_unicChanged();
    partial void OnnumeChanging(string value);
    partial void OnnumeChanged();
    #endregion
		
		public Tip_User()
		{
			this._Persoanas = new EntitySet<Persoana>(new Action<Persoana>(this.attach_Persoanas), new Action<Persoana>(this.detach_Persoanas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_unic", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_unic
		{
			get
			{
				return this._id_unic;
			}
			set
			{
				if ((this._id_unic != value))
				{
					this.Onid_unicChanging(value);
					this.SendPropertyChanging();
					this._id_unic = value;
					this.SendPropertyChanged("id_unic");
					this.Onid_unicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nume", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string nume
		{
			get
			{
				return this._nume;
			}
			set
			{
				if ((this._nume != value))
				{
					this.OnnumeChanging(value);
					this.SendPropertyChanging();
					this._nume = value;
					this.SendPropertyChanged("nume");
					this.OnnumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tip_User_Persoana", Storage="_Persoanas", ThisKey="id_unic", OtherKey="tip_persoana")]
		public EntitySet<Persoana> Persoanas
		{
			get
			{
				return this._Persoanas;
			}
			set
			{
				this._Persoanas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Persoanas(Persoana entity)
		{
			this.SendPropertyChanging();
			entity.Tip_User = this;
		}
		
		private void detach_Persoanas(Persoana entity)
		{
			this.SendPropertyChanging();
			entity.Tip_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipMT")]
	public partial class TipMT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_unic;
		
		private string _nume;
		
		private EntitySet<Complaint> _Complaints;
		
		private EntitySet<MT> _MTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_unicChanging(int value);
    partial void Onid_unicChanged();
    partial void OnnumeChanging(string value);
    partial void OnnumeChanged();
    #endregion
		
		public TipMT()
		{
			this._Complaints = new EntitySet<Complaint>(new Action<Complaint>(this.attach_Complaints), new Action<Complaint>(this.detach_Complaints));
			this._MTs = new EntitySet<MT>(new Action<MT>(this.attach_MTs), new Action<MT>(this.detach_MTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_unic", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_unic
		{
			get
			{
				return this._id_unic;
			}
			set
			{
				if ((this._id_unic != value))
				{
					this.Onid_unicChanging(value);
					this.SendPropertyChanging();
					this._id_unic = value;
					this.SendPropertyChanged("id_unic");
					this.Onid_unicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nume", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string nume
		{
			get
			{
				return this._nume;
			}
			set
			{
				if ((this._nume != value))
				{
					this.OnnumeChanging(value);
					this.SendPropertyChanging();
					this._nume = value;
					this.SendPropertyChanged("nume");
					this.OnnumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipMT_Complaint", Storage="_Complaints", ThisKey="id_unic", OtherKey="id_tip_MTC")]
		public EntitySet<Complaint> Complaints
		{
			get
			{
				return this._Complaints;
			}
			set
			{
				this._Complaints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipMT_MT", Storage="_MTs", ThisKey="id_unic", OtherKey="id_tip")]
		public EntitySet<MT> MTs
		{
			get
			{
				return this._MTs;
			}
			set
			{
				this._MTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Complaints(Complaint entity)
		{
			this.SendPropertyChanging();
			entity.TipMT = this;
		}
		
		private void detach_Complaints(Complaint entity)
		{
			this.SendPropertyChanging();
			entity.TipMT = null;
		}
		
		private void attach_MTs(MT entity)
		{
			this.SendPropertyChanging();
			entity.TipMT = this;
		}
		
		private void detach_MTs(MT entity)
		{
			this.SendPropertyChanging();
			entity.TipMT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Traseu")]
	public partial class Traseu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_unic;
		
		private string _nume;
		
		private EntitySet<MT> _MTs;
		
		private EntitySet<Statie> _Staties;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_unicChanging(int value);
    partial void Onid_unicChanged();
    partial void OnnumeChanging(string value);
    partial void OnnumeChanged();
    #endregion
		
		public Traseu()
		{
			this._MTs = new EntitySet<MT>(new Action<MT>(this.attach_MTs), new Action<MT>(this.detach_MTs));
			this._Staties = new EntitySet<Statie>(new Action<Statie>(this.attach_Staties), new Action<Statie>(this.detach_Staties));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_unic", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_unic
		{
			get
			{
				return this._id_unic;
			}
			set
			{
				if ((this._id_unic != value))
				{
					this.Onid_unicChanging(value);
					this.SendPropertyChanging();
					this._id_unic = value;
					this.SendPropertyChanged("id_unic");
					this.Onid_unicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nume", DbType="NVarChar(255)")]
		public string nume
		{
			get
			{
				return this._nume;
			}
			set
			{
				if ((this._nume != value))
				{
					this.OnnumeChanging(value);
					this.SendPropertyChanging();
					this._nume = value;
					this.SendPropertyChanged("nume");
					this.OnnumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Traseu_MT", Storage="_MTs", ThisKey="id_unic", OtherKey="nr_traseu")]
		public EntitySet<MT> MTs
		{
			get
			{
				return this._MTs;
			}
			set
			{
				this._MTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Traseu_Statie", Storage="_Staties", ThisKey="id_unic", OtherKey="id_traseu")]
		public EntitySet<Statie> Staties
		{
			get
			{
				return this._Staties;
			}
			set
			{
				this._Staties.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MTs(MT entity)
		{
			this.SendPropertyChanging();
			entity.Traseu = this;
		}
		
		private void detach_MTs(MT entity)
		{
			this.SendPropertyChanging();
			entity.Traseu = null;
		}
		
		private void attach_Staties(Statie entity)
		{
			this.SendPropertyChanging();
			entity.Traseu = this;
		}
		
		private void detach_Staties(Statie entity)
		{
			this.SendPropertyChanging();
			entity.Traseu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_unic;
		
		private string _username;
		
		private string _password;
		
		private int _id_persoana;
		
		private EntitySet<Bilet> _Bilets;
		
		private EntitySet<Complaint> _Complaints;
		
		private EntityRef<Persoana> _Persoana;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_unicChanging(int value);
    partial void Onid_unicChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onid_persoanaChanging(int value);
    partial void Onid_persoanaChanged();
    #endregion
		
		public User()
		{
			this._Bilets = new EntitySet<Bilet>(new Action<Bilet>(this.attach_Bilets), new Action<Bilet>(this.detach_Bilets));
			this._Complaints = new EntitySet<Complaint>(new Action<Complaint>(this.attach_Complaints), new Action<Complaint>(this.detach_Complaints));
			this._Persoana = default(EntityRef<Persoana>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_unic", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_unic
		{
			get
			{
				return this._id_unic;
			}
			set
			{
				if ((this._id_unic != value))
				{
					this.Onid_unicChanging(value);
					this.SendPropertyChanging();
					this._id_unic = value;
					this.SendPropertyChanged("id_unic");
					this.Onid_unicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_persoana", DbType="Int NOT NULL")]
		public int id_persoana
		{
			get
			{
				return this._id_persoana;
			}
			set
			{
				if ((this._id_persoana != value))
				{
					if (this._Persoana.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_persoanaChanging(value);
					this.SendPropertyChanging();
					this._id_persoana = value;
					this.SendPropertyChanged("id_persoana");
					this.Onid_persoanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Bilet", Storage="_Bilets", ThisKey="id_unic", OtherKey="id_calator")]
		public EntitySet<Bilet> Bilets
		{
			get
			{
				return this._Bilets;
			}
			set
			{
				this._Bilets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Complaint", Storage="_Complaints", ThisKey="id_unic", OtherKey="id_user")]
		public EntitySet<Complaint> Complaints
		{
			get
			{
				return this._Complaints;
			}
			set
			{
				this._Complaints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persoana_User", Storage="_Persoana", ThisKey="id_persoana", OtherKey="id_unic", IsForeignKey=true)]
		public Persoana Persoana
		{
			get
			{
				return this._Persoana.Entity;
			}
			set
			{
				Persoana previousValue = this._Persoana.Entity;
				if (((previousValue != value) 
							|| (this._Persoana.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persoana.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Persoana.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._id_persoana = value.id_unic;
					}
					else
					{
						this._id_persoana = default(int);
					}
					this.SendPropertyChanged("Persoana");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bilets(Bilet entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Bilets(Bilet entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Complaints(Complaint entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Complaints(Complaint entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
}
#pragma warning restore 1591
